Private Sub importer_Click()
    Dim dossier As String
    Dim listeFichiers As Collection
    Dim fichier As Variant
    Dim tabFinal() As Variant
    Dim i As Long
    
    ' Choisir un dossier
    With Application.FileDialog(msoFileDialogFolderPicker)
        .Title = "Sélectionnez le dossier contenant les fichiers Excel"
        If .Show <> -1 Then Exit Sub
        dossier = .SelectedItems(1)
    End With

    ' Liste des fichiers Excel
    Set listeFichiers = New Collection
    Call ParcourirDossier(dossier, listeFichiers)

    ' Préparer tableau résultat à 3 colonnes
    ReDim tabFinal(1 To listeFichiers.Count, 1 To 3)

    i = 1
    Dim chemin As String
    Dim elements() As String
    Dim produit As String
    Dim reseau_dist As String
    Dim nomFichier As String

    For Each fichier In listeFichiers
        chemin = fichier
        elements = Split(chemin, "\")
        
        nomFichier = elements(UBound(elements)) ' nom du fichier
        produit = elements(UBound(elements) - 1) ' nom du dossier qui contient le fichier
        reseau_dist = elements(UBound(elements) - 2) ' dossier au-dessus (grand-parent)

        tabFinal(i, 1) = reseau_dist
        tabFinal(i, 2) = produit
        tabFinal(i, 3) = nomFichier
        i = i + 1
    Next

    ' (Optionnel) Afficher dans une nouvelle feuille Excel
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Sheets.Add
    ws.Name = "Fichiers importés"

    ws.Cells(1, 1).Value = "Réseau_dist"
    ws.Cells(1, 2).Value = "Produit"
    ws.Cells(1, 3).Value = "Fichier"

    ws.Range("A2").Resize(UBound(tabFinal), 3).Value = tabFinal

    MsgBox listeFichiers.Count & " fichiers traités et listés avec succès.", vbInformation
End Sub


Private Sub ParcourirDossier(ByVal chemin As String, ByRef fichiers As Collection)
    Dim fso As Object, dossier As Object, sousDossier As Object, fichier As Object
    Set fso = CreateObject("Scripting.FileSystemObject")
    Set dossier = fso.GetFolder(chemin)

    For Each fichier In dossier.Files
        If LCase(fso.GetExtensionName(fichier.Name)) = "xlsx" Then
            fichiers.Add fichier.Path
        End If
    Next

    For Each sousDossier In dossier.SubFolders
        Call ParcourirDossier(sousDossier.Path, fichiers)
    Next
End Sub




'##################################Importation des données de 2024###################################################
'####################################################################################################################
'####################################################################################################################

Private Sub importer_2024()
    Dim dossier As String
    Dim listeFichiers As Collection
    Dim fichier As Variant
    Dim tabFinal() As Variant
    Dim i As Long
    
    ' Choisir un dossier
    With Application.FileDialog(msoFileDialogFolderPicker)
        .Title = "Sélectionnez le dossier contenant les fichiers Excel"
        If .Show <> -1 Then Exit Sub
        dossier = .SelectedItems(1)
    End With

    ' Liste des fichiers Excel
    Set listeFichiers = New Collection
    Call ParcourirDossier(dossier, listeFichiers)

    ' Préparer tableau résultat à 3 colonnes
    ReDim tabFinal(1 To listeFichiers.Count, 1 To 3)

    i = 1
    Dim chemin As String
    Dim elements() As String
    Dim produit As String
    Dim reseau_dist As String
    Dim nomFichier As String

    For Each fichier In listeFichiers
        chemin = fichier
        elements = Split(chemin, "\")
        
        nomFichier = elements(UBound(elements)) ' nom du fichier
        produit = elements(UBound(elements) - 1) ' nom du dossier qui contient le fichier
        reseau_dist = elements(UBound(elements) - 2) ' dossier au-dessus (grand-parent)

        tabFinal(i, 1) = reseau_dist
        tabFinal(i, 2) = produit
        tabFinal(i, 3) = nomFichier
        i = i + 1
    Next

    ' (Optionnel) Afficher dans une nouvelle feuille Excel
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Sheets.Add
    ws.Name = "Fichiers importés"

    ws.Cells(1, 1).Value = "Réseau_dist"
    ws.Cells(1, 2).Value = "Produit"
    ws.Cells(1, 3).Value = "Fichier"

    ws.Range("A2").Resize(UBound(tabFinal), 3).Value = tabFinal

    MsgBox listeFichiers.Count & " fichiers traités et listés avec succès.", vbInformation
End Sub


Private Sub ParcourirDossier(ByVal chemin As String, ByRef fichiers As Collection)
    Dim fso As Object, dossier As Object, sousDossier As Object, fichier As Object
    Set fso = CreateObject("Scripting.FileSystemObject")
    Set dossier = fso.GetFolder(chemin)

    For Each fichier In dossier.Files
        If LCase(fso.GetExtensionName(fichier.Name)) = "xlsx" Then
            fichiers.Add fichier.Path
        End If
    Next

    For Each sousDossier In dossier.SubFolders
        Call ParcourirDossier(sousDossier.Path, fichiers)
    Next
End Sub



'##################################Importation des données de 2023###################################################
'####################################################################################################################
'####################################################################################################################



Private Sub importer_2023()
    Dim dossier As String
    Dim listeFichiers As Collection
    Dim fichier As Variant
    Dim tabFinal() As Variant
    Dim i As Long
    
    ' Choisir un dossier
    With Application.FileDialog(msoFileDialogFolderPicker)
        .Title = "Sélectionnez le dossier contenant les fichiers Excel"
        If .Show <> -1 Then Exit Sub
        dossier = .SelectedItems(1)
    End With

    ' Liste des fichiers Excel
    Set listeFichiers = New Collection
    Call ParcourirDossier(dossier, listeFichiers)

    ' Préparer tableau résultat à 3 colonnes
    ReDim tabFinal(1 To listeFichiers.Count, 1 To 3)

    i = 1
    Dim chemin As String
    Dim elements() As String
    Dim produit As String
    Dim reseau_dist As String
    Dim nomFichier As String

    For Each fichier In listeFichiers
        chemin = fichier
        elements = Split(chemin, "\")
        
        nomFichier = elements(UBound(elements)) ' nom du fichier
        produit = elements(UBound(elements) - 1) ' nom du dossier qui contient le fichier
        reseau_dist = elements(UBound(elements) - 2) ' dossier au-dessus (grand-parent)

        tabFinal(i, 1) = reseau_dist
        tabFinal(i, 2) = produit
        tabFinal(i, 3) = nomFichier
        i = i + 1
    Next

    ' (Optionnel) Afficher dans une nouvelle feuille Excel
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Sheets.Add
    ws.Name = "Fichiers importés"

    ws.Cells(1, 1).Value = "Réseau_dist"
    ws.Cells(1, 2).Value = "Produit"
    ws.Cells(1, 3).Value = "Fichier"

    ws.Range("A2").Resize(UBound(tabFinal), 3).Value = tabFinal

    MsgBox listeFichiers.Count & " fichiers traités et listés avec succès.", vbInformation
End Sub









'##################################################################
' Importation des données de 2023 avec structure tab((k,l),(i,j))
'##################################################################

Private Sub importer_2023()
    Dim dossier As String
    Dim listeFichiers As Collection
    Dim fichier As Variant
    Dim ws As Worksheet
    Dim wb As Workbook
    Dim sh As Worksheet
    Dim i As Long, j As Long
    Dim chemin As String
    Dim elements() As String
    Dim produit As String
    Dim reseau_dist As String
    Dim nomFichier As String
    Dim tabFinal As Object ' Dictionnaire pour stocker tab((k,l),(i,j))
    Dim keyKL As String
    Dim rng As Range
    Dim rowCount As Long, colCount As Long
    
    ' Initialiser le dictionnaire pour stocker les données
    Set tabFinal = CreateObject("Scripting.Dictionary")
    
    ' Choisir un dossier
    With Application.FileDialog(msoFileDialogFolderPicker)
        .Title = "Sélectionnez le dossier contenant les fichiers Excel"
        If .Show <> -1 Then Exit Sub
        dossier = .SelectedItems(1)
    End With
    
    ' Liste des fichiers Excel
    Set listeFichiers = New Collection
    Call ParcourirDossier(dossier, listeFichiers)
    
    ' Parcourir chaque fichier
    For Each fichier In listeFichiers
        chemin = fichier
        elements = Split(chemin, "\")
        
        nomFichier = elements(UBound(elements)) ' Nom du fichier
        produit = elements(UBound(elements) - 1) ' Nom du dossier produit
        reseau_dist = elements(UBound(elements) - 2) ' Nom du dossier réseau
        
        ' Créer une clé unique pour (k,l)
        keyKL = reseau_dist & "_" & produit
        
        ' Ouvrir le fichier Excel
        Set wb = Workbooks.Open(chemin)
        Set sh = wb.Sheets(1) ' Première feuille (ajustez si nécessaire)
        
        ' Trouver la plage de données
        Set rng = sh.UsedRange
        rowCount = rng.Rows.Count
        colCount = rng.Columns.Count
        
        ' Initialiser un tableau pour les données (i,j) de ce fichier
        Dim dataIJ() As Variant
        ReDim dataIJ(1 To rowCount, 1 To colCount)
        
        ' Lire les données cellule par cellule
        For i = 1 To rowCount
            For j = 1 To colCount
                dataIJ(i, j) = sh.Cells(i, j).Value
            Next j
        Next i
        
        ' Stocker les données dans le dictionnaire
        tabFinal(keyKL) = dataIJ
        
        ' Fermer le fichier
        wb.Close SaveChanges:=False
    Next
    
    ' (Optionnel) Afficher un résumé dans une nouvelle feuille
    Set ws = ThisWorkbook.Sheets.Add
    ws.Name = "Résumé Importation"
    
    ws.Cells(1, 1).Value = "Réseau"
    ws.Cells(1, 2).Value = "Produit"
    ws.Cells(1, 3).Value = "Lignes"
    ws.Cells(1, 4).Value = "Colonnes"
    
    i = 2
    For Each keyKL In tabFinal.Keys
        elements = Split(keyKL, "_")
        ws.Cells(i, 1).Value = elements(0) ' Réseau
        ws.Cells(i, 2).Value = elements(1) ' Produit
        ws.Cells(i, 3).Value = UBound(tabFinal(keyKL), 1) ' Nombre de lignes
        ws.Cells(i, 4).Value = UBound(tabFinal(keyKL), 2) ' Nombre de colonnes
        i = i + 1
    Next
    
    MsgBox listeFichiers.Count & " fichiers traités et importés avec succès.", vbInformation
End Sub

' Fonction pour parcourir les fichiers Excel dans un dossier et sous-dossiers
Private Sub ParcourirDossier(ByVal dossier As String, ByRef listeFichiers As Collection)
    Dim fso As Object
    Dim dossierObj As Object
    Dim fichierObj As Object
    Dim sousDossierObj As Object
    
    Set fso = CreateObject("Scripting.FileSystemObject")
    Set dossierObj = fso.GetFolder(dossier)
    
    ' Ajouter les fichiers Excel du dossier courant
    For Each fichierObj In dossierObj.Files
        If LCase(fso.GetExtensionName(fichierObj.Name)) = "xlsx" Or LCase(fso.GetExtensionName(fichierObj.Name)) = "xls" Then
            listeFichiers.Add fichierObj.Path
        End If
    Next
    
    ' Parcourir les sous-dossiers
    For Each sousDossierObj In dossierObj.SubFolders
        ParcourirDossier sousDossierObj.Path, listeFichiers
    Next
End Sub





'##################################################################
' Importation rapide des données de 2023 pour plus de 1000 fichiers
'##################################################################

Private Sub importer_2023()
    Dim dossier As String
    Dim listeFichiers As Collection
    Dim fichier As Variant
    Dim tabFinal As Object ' Dictionnaire pour tab((k,l),(i,j))
    Dim keyKL As String
    Dim conn As Object
    Dim rs As Object
    Dim sql As String
    Dim i As Long, j As Long
    Dim rowCount As Long, colCount As Long
    Dim chemin As String
    Dim elements() As String
    Dim produit As String
    Dim reseau_dist As String
    Dim startTime As Double
    
    ' Mesurer le temps d'exécution
    startTime = Timer
    
    ' Initialiser le dictionnaire
    Set tabFinal = CreateObject("Scripting.Dictionary")
    
    ' Choisir un dossier
    With Application.FileDialog(msoFileDialogFolderPicker)
        .Title = "Sélectionnez le dossier contenant les fichiers Excel"
        If .Show <> -1 Then Exit Sub
        dossier = .SelectedItems(1)
    End With
    
    ' Liste des fichiers Excel
    Set listeFichiers = New Collection
    Call ParcourirDossier(dossier, listeFichiers)
    
    ' Initialiser la connexion ADO
    Set conn = CreateObject("ADODB.Connection")
    Set rs = CreateObject("ADODB.Recordset")
    
    ' Parcourir chaque fichier
    For Each fichier In listeFichiers
        chemin = fichier
        elements = Split(chemin, "\")
        
        ' Extraire réseau et produit
        produit = elements(UBound(elements) - 1) ' Dossier produit
        reseau_dist = elements(UBound(elements) - 2) ' Dossier réseau
        
        ' Clé unique pour (k,l)
        keyKL = reseau_dist & "_" & produit
        
        ' Connexion au fichier Excel via ADO
        conn.Open "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" & chemin & ";Extended Properties='Excel 12.0 Xml;HDR=NO';"
        
        ' Requête SQL pour lire la première feuille (ajustez si le nom de la feuille diffère)
        sql = "SELECT * FROM [Sheet1$]" ' Remplacez "Sheet1" par le nom de votre feuille si nécessaire
        
        ' Exécuter la requête
        rs.Open sql, conn, 3, 1 ' adOpenStatic, adLockReadOnly
        
        ' Obtenir les dimensions
        If Not rs.EOF Then
            rs.MoveLast
            rowCount = rs.RecordCount
            rs.MoveFirst
            colCount = rs.Fields.Count
            
            ' Initialiser le tableau pour les données (i,j)
            Dim dataIJ() As Variant
            ReDim dataIJ(1 To rowCount, 1 To colCount)
            
            ' Lire les données
            i = 1
            While Not rs.EOF
                For j = 1 To colCount
                    dataIJ(i, j) = rs.Fields(j - 1).Value
                Next j
                rs.MoveNext
                i = i + 1
            Wend
            
            ' Stocker dans le dictionnaire
            tabFinal(keyKL) = dataIJ
        End If
        
        ' Fermer le recordset et la connexion
        rs.Close
        conn.Close
    Next
    
    ' (Optionnel) Afficher un résumé dans une feuille
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Sheets.Add
    ws.Name = "Résumé Importation"
    
    ws.Cells(1, 1).Value = "Réseau"
    ws.Cells(1, 2).Value = "Produit"
    ws.Cells(1, 3).Value = "Lignes"
    ws.Cells(1, 4).Value = "Colonnes"
    
    i = 2
    For Each keyKL In tabFinal.Keys
        elements = Split(keyKL, "_")
        ws.Cells(i, 1).Value = elements(0) ' Réseau
        ws.Cells(i, 2).Value = elements(1) ' Produit
        ws.Cells(i, 3).Value = UBound(tabFinal(keyKL), 1) ' Lignes
        ws.Cells(i, 4).Value = UBound(tabFinal(keyKL), 2) ' Colonnes
        i = i + 1
    Next
    
    ' Afficher le temps d'exécution
    MsgBox listeFichiers.Count & " fichiers traités en " & Round(Timer - startTime, 2) & " secondes.", vbInformation
End Sub

' Fonction pour parcourir les fichiers Excel dans un dossier et sous-dossiers
Private Sub ParcourirDossier(ByVal dossier As String, ByRef listeFichiers As Collection)
    Dim fso As Object
    Dim dossierObj As Object
    Dim fichierObj As Object
    Dim sousDossierObj As Object
    
    Set fso = CreateObject("Scripting.FileSystemObject")
    Set dossierObj = fso.GetFolder(dossier)
    
    ' Ajouter les fichiers Excel
    For Each fichierObj In dossierObj.Files
        If LCase(fso.GetExtensionName(fichierObj.Name)) = "xlsx" Or LCase(fso.GetExtensionName(fichierObj.Name)) = "xls" Then
            listeFichiers.Add fichierObj.Path
        End If
    Next
    
    ' Parcourir les sous-dossiers
    For Each sousDossierObj In dossierObj.SubFolders
        ParcourirDossier sousDossierObj.Path, listeFichiers
    Next
End Sub
